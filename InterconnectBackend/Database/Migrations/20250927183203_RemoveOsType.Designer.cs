// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(InterconnectDbContext))]
    [Migration("20250927183203_RemoveOsType")]
    partial class RemoveOsType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Models.Database.BootableDiskModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Path")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Version")
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.ToTable("BootableDiskModels");
                });

            modelBuilder.Entity("Models.Database.InternetEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("VirtualNetworkId")
                        .HasColumnType("integer");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VirtualNetworkId");

                    b.ToTable("InternetEntityModels");
                });

            modelBuilder.Entity("Models.Database.VirtualMachineEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DeviceDefinition")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("VmUuid")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("VirtualMachineEntityModels");
                });

            modelBuilder.Entity("Models.Database.VirtualNetworkEntityConnectionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DestinationEntityId")
                        .HasColumnType("integer");

                    b.Property<int>("DestinationEntityType")
                        .HasColumnType("integer");

                    b.Property<int>("SourceEntityId")
                        .HasColumnType("integer");

                    b.Property<int>("SourceEntityType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("VirtualNetworkEntityConnectionModels");
                });

            modelBuilder.Entity("Models.Database.VirtualNetworkModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BridgeName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("varchar(15)");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("VirtualNetworkModels");
                });

            modelBuilder.Entity("Models.Database.VirtualSwitchEntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("VirtualNetworkId")
                        .HasColumnType("integer");

                    b.Property<string>("Visible")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VirtualNetworkId");

                    b.ToTable("VirtualSwitchEntityModels");
                });

            modelBuilder.Entity("Models.Database.InternetEntityModel", b =>
                {
                    b.HasOne("Models.Database.VirtualNetworkModel", "VirtualNetwork")
                        .WithMany("Internets")
                        .HasForeignKey("VirtualNetworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VirtualNetwork");
                });

            modelBuilder.Entity("Models.Database.VirtualSwitchEntityModel", b =>
                {
                    b.HasOne("Models.Database.VirtualNetworkModel", "VirtualNetwork")
                        .WithMany("VirtualSwitches")
                        .HasForeignKey("VirtualNetworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VirtualNetwork");
                });

            modelBuilder.Entity("Models.Database.VirtualNetworkModel", b =>
                {
                    b.Navigation("Internets");

                    b.Navigation("VirtualSwitches");
                });
#pragma warning restore 612, 618
        }
    }
}
